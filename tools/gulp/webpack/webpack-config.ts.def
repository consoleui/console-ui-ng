import { resolve, join } from 'path';
import { PROJECT_ROOT, SOURCE_ROOT, DIST_ROOT } from '../build-config';

import { AotPlugin, AotPluginOptions } from '@ngtools/webpack';

// const webpack = require('webpack');
const webpackMerge = require('webpack-merge');
const HtmlWebpackPlugin = require('html-webpack-plugin');

const webpackLoader = '@ngtools/webpack';
const ProgressPlugin = require('webpack/lib/ProgressPlugin');

function createAotPlugin(options: any) {
    return new AotPlugin(Object.assign({}, options));
}

export function webpackConfig(appName: string) {
    const appRoot = join(SOURCE_ROOT, appName);
    const appOut = join(DIST_ROOT, appName);

    const aotPluginOptions: AotPluginOptions = {
        tsConfigPath: join(appRoot, 'tsconfig.demo.json'),
        mainPath: join(appRoot, 'main.ts'),
        skipCodeGeneration: true
    };

    const aotConfig = {
        module: {
            rules: [
                {
                   test: /\.ts$/,
                   loader: webpackLoader
                }
            ]
        },
        plugins: [ createAotPlugin(aotPluginOptions) ]
    };

    const nodeModules = resolve(PROJECT_ROOT, 'node_modules');

    const baseConfig = {
        entry: {
            polyfills: join(appRoot, 'polyfills.ts'),
            main: join(appRoot, 'main.ts')
        },
        output: {
            path: appOut,
            publicPath: '/assets/',
            filename: '[name].bundle.js',
            chunkFilename: '[id].chunk.js'
        },
        resolve: {
            extensions: ['.ts', '.js'],
            modules: ['node_modules', nodeModules],
            symlinks: false
        },
        resolveLoader: {
            modules: [nodeModules, 'node_modules']
        },
        module: {
            rules: [
                {
                    test: /\.scss$|\.sass$/,
                    use: [
                        {loader: 'style-loader'},
                        {loader: 'css-loader'},
                        {loader: 'sass-loader'},
                    ]
                },
                { test: /\.html$/, loader: 'raw-loader' },
            ]
        },
        plugins: [
            new ProgressPlugin({ profile: false, colors: true })
        ]
    };

    return webpackMerge([baseConfig, aotConfig]);
}
